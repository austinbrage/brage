enum TYPESCRIPT_TYPES {
    DATE = 'Date',
    BUFFER = 'Buffer',
    NUMBER = 'number',
    STRING = 'string',
    OBJECT = 'object',
    BOOLEAN = 'boolean'
}

export enum TYPES_MAP {
    'DATE'= TYPESCRIPT_TYPES.DATE,
    'TIME'= TYPESCRIPT_TYPES.DATE,
    'DATETIME'= TYPESCRIPT_TYPES.DATE,
    'TIMESTAMP'= TYPESCRIPT_TYPES.DATE,

    'BLOB'= TYPESCRIPT_TYPES.BUFFER,
    'BYTEA'= TYPESCRIPT_TYPES.BUFFER,
    'VARBINARY'= TYPESCRIPT_TYPES.BUFFER,

    'INT'= TYPESCRIPT_TYPES.NUMBER,
    'FLOAT'= TYPESCRIPT_TYPES.NUMBER,
    'DOUBLE'= TYPESCRIPT_TYPES.NUMBER,
    'DECIMAL'= TYPESCRIPT_TYPES.NUMBER,

    'VARCHAR'= TYPESCRIPT_TYPES.STRING,
    'TEXT'= TYPESCRIPT_TYPES.STRING,

    'BIT'= TYPESCRIPT_TYPES.BOOLEAN,
    'BOOLEAN'= TYPESCRIPT_TYPES.BOOLEAN,

    'JSON'= TYPESCRIPT_TYPES.OBJECT,
    'JSONB'= TYPESCRIPT_TYPES.OBJECT
}

export function isValidType(key: string): key is keyof typeof TYPES_MAP {
    return key in TYPES_MAP
}